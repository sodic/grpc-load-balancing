// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ip_service.proto

package ip

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TellMeYourIPRequest struct {
	ClientIp             string   `protobuf:"bytes,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TellMeYourIPRequest) Reset()         { *m = TellMeYourIPRequest{} }
func (m *TellMeYourIPRequest) String() string { return proto.CompactTextString(m) }
func (*TellMeYourIPRequest) ProtoMessage()    {}
func (*TellMeYourIPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6bc876318e14ce, []int{0}
}

func (m *TellMeYourIPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TellMeYourIPRequest.Unmarshal(m, b)
}
func (m *TellMeYourIPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TellMeYourIPRequest.Marshal(b, m, deterministic)
}
func (m *TellMeYourIPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TellMeYourIPRequest.Merge(m, src)
}
func (m *TellMeYourIPRequest) XXX_Size() int {
	return xxx_messageInfo_TellMeYourIPRequest.Size(m)
}
func (m *TellMeYourIPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TellMeYourIPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TellMeYourIPRequest proto.InternalMessageInfo

func (m *TellMeYourIPRequest) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

type TellMeYourIPResponse struct {
	ServerIp             string   `protobuf:"bytes,1,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TellMeYourIPResponse) Reset()         { *m = TellMeYourIPResponse{} }
func (m *TellMeYourIPResponse) String() string { return proto.CompactTextString(m) }
func (*TellMeYourIPResponse) ProtoMessage()    {}
func (*TellMeYourIPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6bc876318e14ce, []int{1}
}

func (m *TellMeYourIPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TellMeYourIPResponse.Unmarshal(m, b)
}
func (m *TellMeYourIPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TellMeYourIPResponse.Marshal(b, m, deterministic)
}
func (m *TellMeYourIPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TellMeYourIPResponse.Merge(m, src)
}
func (m *TellMeYourIPResponse) XXX_Size() int {
	return xxx_messageInfo_TellMeYourIPResponse.Size(m)
}
func (m *TellMeYourIPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TellMeYourIPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TellMeYourIPResponse proto.InternalMessageInfo

func (m *TellMeYourIPResponse) GetServerIp() string {
	if m != nil {
		return m.ServerIp
	}
	return ""
}

func init() {
	proto.RegisterType((*TellMeYourIPRequest)(nil), "ip.TellMeYourIPRequest")
	proto.RegisterType((*TellMeYourIPResponse)(nil), "ip.TellMeYourIPResponse")
}

func init() { proto.RegisterFile("ip_service.proto", fileDescriptor_ed6bc876318e14ce) }

var fileDescriptor_ed6bc876318e14ce = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x2c, 0x88, 0x2f,
	0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xca, 0x2c,
	0x50, 0x32, 0xe2, 0x12, 0x0e, 0x49, 0xcd, 0xc9, 0xf1, 0x4d, 0x8d, 0xcc, 0x2f, 0x2d, 0xf2, 0x0c,
	0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe6, 0xe2, 0x4c, 0xce, 0xc9, 0x4c, 0xcd,
	0x2b, 0x89, 0xcf, 0x2c, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0xe2, 0x80, 0x08, 0x78, 0x16,
	0x28, 0x19, 0x73, 0x89, 0xa0, 0xea, 0x29, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x05, 0x69, 0x02, 0x59,
	0x90, 0x5a, 0x84, 0xa4, 0x09, 0x22, 0xe0, 0x59, 0x60, 0xe4, 0xc7, 0xc5, 0xe9, 0x19, 0x10, 0x0c,
	0xb1, 0x5f, 0xc8, 0x91, 0x8b, 0x07, 0xd9, 0x04, 0x21, 0x71, 0xbd, 0xcc, 0x02, 0x3d, 0x2c, 0xee,
	0x90, 0x92, 0xc0, 0x94, 0x80, 0x58, 0xe6, 0xc4, 0x12, 0xc5, 0x94, 0x59, 0x90, 0xc4, 0x06, 0xf6,
	0x89, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xce, 0xbb, 0x91, 0xce, 0xdd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IPServiceClient is the client API for IPService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IPServiceClient interface {
	TellMeYourIP(ctx context.Context, in *TellMeYourIPRequest, opts ...grpc.CallOption) (*TellMeYourIPResponse, error)
}

type iPServiceClient struct {
	cc *grpc.ClientConn
}

func NewIPServiceClient(cc *grpc.ClientConn) IPServiceClient {
	return &iPServiceClient{cc}
}

func (c *iPServiceClient) TellMeYourIP(ctx context.Context, in *TellMeYourIPRequest, opts ...grpc.CallOption) (*TellMeYourIPResponse, error) {
	out := new(TellMeYourIPResponse)
	err := c.cc.Invoke(ctx, "/ip.IPService/TellMeYourIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IPServiceServer is the server API for IPService service.
type IPServiceServer interface {
	TellMeYourIP(context.Context, *TellMeYourIPRequest) (*TellMeYourIPResponse, error)
}

// UnimplementedIPServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIPServiceServer struct {
}

func (*UnimplementedIPServiceServer) TellMeYourIP(ctx context.Context, req *TellMeYourIPRequest) (*TellMeYourIPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TellMeYourIP not implemented")
}

func RegisterIPServiceServer(s *grpc.Server, srv IPServiceServer) {
	s.RegisterService(&_IPService_serviceDesc, srv)
}

func _IPService_TellMeYourIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TellMeYourIPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPServiceServer).TellMeYourIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ip.IPService/TellMeYourIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPServiceServer).TellMeYourIP(ctx, req.(*TellMeYourIPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IPService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ip.IPService",
	HandlerType: (*IPServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TellMeYourIP",
			Handler:    _IPService_TellMeYourIP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ip_service.proto",
}
